version: "3.8"

services:
  mongo_api:
    build:
      context: ./mongo_api
      dockerfile: Dockerfile
    ports:
      - "5050:5050"
    networks:
      - backend-network
    privileged: true

  notifications_api:
    build:
      context: ./notifications_api
      dockerfile: Dockerfile
    ports:
      - "9090:9090"
    networks:
      - backend-network
    privileged: true

  storage_api:
    build:
      context: ./storage_api
      dockerfile: Dockerfile
    ports:
      - "7070:7070"
    networks:
      - backend-network
    privileged: true

  chroma_api:
    build:
      context: ./chroma_api
      dockerfile: Dockerfile
    ports:
      - "2525:2525"
    networks:
      - backend-network
    privileged: true
    depends_on:
      - redis
      - postgres
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:2525 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  langchain_api:
    build:
      context: ./langchain_api
      dockerfile: Dockerfile
    ports:
      - "2020:2020"
    networks:
      - backend-network
    depends_on:
      - redis
      - postgres
    privileged: true

  scheduler_api:
    build:
      context: ./scheduler_api
      dockerfile: Dockerfile
    ports:
      - "9898:9898"
    networks:
      - backend-network
    privileged: true
    depends_on:
      - redis
      - postgres

  redis:
    image: "redis:alpine"
    ports:
      - "6379:6379"
    networks:
      - backend-network
    privileged: true

  postgres:
    image: "postgres:13-alpine"
    environment:
      POSTGRES_USER: your_user
      POSTGRES_PASSWORD: your_password
      POSTGRES_DB: chat_history_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - backend-network

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile.nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt
    networks:
      - backend-network

networks:
  backend-network:

volumes:
  postgres_data:
